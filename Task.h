//
//  Task.m
//  PetClass
//
//  Created by Eduard Kolenov on 18.12.15.
//  Copyright © 2015 Eduard Kolenov. All rights reserved.
//



//Создать дополнительно класс Bird. И несколько его потомков: Penguin, Frigate-bird, Eagle.
//
//Задание такое:
//1. Реализуйте протоколы Flyers, Swimmers, Runners. Каждый протокол должен иметь пару свойств, например скорость или максимальная высота полета или дальность бега и пару методов,
//например плыть, летать или бегать, подниматься или опускаться и тд. Можете поэксперементировать!
//
//2. Часть методов делайте обязательными (например у водоплавающих обязательный метод это плыть, а у сухопутных(бегающих) - бегать), а другую часть не обязательными.
//
//3. Используйте ранее созданные классы животных и птиц. Каждому типу класса реализуйте соответвующий протокол. Например у кошек и собак реализуйте протокол Runners, тоже самое с другими протоколами. Пусть каждый протокол будет реализован как некоторыми классами животных, так и некоторыми классами птиц.
//
//4. Положите всех в одни массив. Тех кто бегает заставьте бегать и рассказывать про свои свойства. Причем у некоторых объектов пусть будут одни необязательные свойства или методы, а у других другие. Тот кто бегает пусть бегает, а тот кто плавает, пусть плавает. Тот кто ничего не делает должен быть выведен на экран, что он ничем не занят.
//
//5. Сделайте так чтобы один какой-то класс мог и бегать и летать и плавать - посмотрите как он себя поведет в цикле.
//
//Поработайте с наборами и словарями. Отсортируйте элементы в коллекциях по имени или по их типу.